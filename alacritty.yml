# Configuration for Alacritty, the GPU enhanced terminal emulator
import:
  - "/Users/fatih/.config/alacritty/color.yml"

# Any items in the `env` entry below will be added as
# environment variables. Some entries may override variables
# set by alacritty it self.
env:
  # TERM env customization.
  #
  # If this property is not set, alacritty will set it to xterm-256color.
  #
  # Note that some xterm terminfo databases don't declare support for italics.
  # You can verify this by checking for the presence of `smso` and `sitm` in
  # `infocmp xterm-256color`.
  TERM: xterm-256color

window:
  # Window dimensions in character columns and lines
  # (changes require restart)
  dimensions:
    columns: 110
    lines: 40
  position:
    x: 400
    y: 500

  # Adds this many blank pixels of padding around the window
  # Units are physical pixels; this is not DPI aware.
  # (change requires restart)
  padding:
    x: 2
    y: 2

  # Spread additional padding evenly around the terminal content.
  dynamic_padding: false

  dynamic_title: true

  # Background opacity
  opacity: 0.95

  # Window decorations
  # Setting this to false will result in window without borders and title bar.
  decorations: none 

# When true, bold text is drawn using the bright variant of colors.
draw_bold_text_with_bright_colors: true

scrolling:
  # Maximum number of lines in the scrollback buffer.
  # Specifying '0' will disable scrolling.
  history: 10000

  # Number of lines the viewport will move for every line scrolled when
  # scrollback is enabled (history > 0).
  multiplier: 3

# Font configuration (changes require restart)
font:
  # The normal (roman) font face to use.
  normal:
    family: "JetBrainsMono NF"
    # style: ExtraLight
    style: Regular

  # The bold font face
  bold:
    family: "JetBrainsMono NF"
    style: Bold

  # The italic font face
  italic:
    family: "JetBrainsMono NF"
    style: Italic

  # Point size of the font
  size: 15.5

  # Offset is the extra space around each character. offset.y can be thought of
  # as modifying the linespacing, and offset.x as modifying the letter spacing.
  offset:
    x: 0
    y: 0

  # Glyph offset determines the locations of the glyphs within their cells with
  # the default being at the bottom. Increase the x offset to move the glyph to
  # the right, increase the y offset to move the glyph upward.
  glyph_offset:
    x: 0
    y: 0

# debug:
# Should display the render timer
# render_timer: false

# schemes:
#   gruvbox_light: &light
#     # Default colors
#     primary:
#       background: '0xf9f5d7' # hard contrast
#       # background: '0xfbf1c7' # normal
#       # soft contrast: background = '0xf2e5bc'
#       foreground: '0x3c3836'

#     # Normal colors
#     normal:
#       black:   '0xfbf1c7'
#       red:     '0xcc241d'
#       green:   '0x98971a'
#       yellow:  '0xd79921'
#       blue:    '0x458588'
#       magenta: '0xb16286'
#       cyan:    '0x689d6a'
#       white:   '0x7c6f64'

#     # Bright colors
#     bright:
#       black:   '0x928374'
#       red:     '0x9d0006'
#       green:   '0x79740e'
#       yellow:  '0xb57614'
#       blue:    '0x076678'
#       magenta: '0x8f3f71'
#       cyan:    '0x427b58'
#       white:   '0x3c3836'
#   gruvbox_dark: &dark
#     # Default colors
#     primary:
#       background: '0x1d2021' # hard contrast
#       # background: '0x282828' # normal contrast
#       foreground: '0xebdbb2'

#     # Normal colors
#     normal:
#       black:   '0x282828'
#       red:     '0xcc241d'
#       green:   '0x98971a'
#       yellow:  '0xd79921'
#       blue:    '0x458588'
#       magenta: '0xb16286'
#       cyan:    '0x689d6a'
#       white:   '0xa89984'

#     # Bright colors
#     bright:
#       black:   '0x928374'
#       red:     '0xfb4934'
#       green:   '0xb8bb26'
#       yellow:  '0xfabd2f'
#       blue:    '0x83a598'
#       magenta: '0xd3869b'
#       cyan:    '0x8ec07c'
#       white:   '0xebdbb2'

# colors: *dark

# Colors (Solarized Dark)
# colors:
#   # Default colors 
#   primary:
#     background: "0x1a1a1a"
#     foreground: "0xEFEFEF"
#
#   # Normal colors
#   normal:
#     black: "0x000000"
#     red: "0xdc322f"
#     green: "0x859900"
#     yellow: "0xb58900"
#     blue: "0x268bd2"
#     magenta: "0xd33682"
#     cyan: "0x2aa198"
#     white: "0xeee8d5"
#
#   # Bright colors
#   bright:
#     black: "0x8F8F8F"
#     red: "0xcb4b16"
#     green: "0x586e75"
#     yellow: "0x657b83"
#     blue: "0x839496"
#     magenta: "0x6c71c4"
#     cyan: "0x93a1a1"
#     white: "0xfdf6e3"



schemes:
  # nord color scheme 

  nord: &nord
    primary:
      background: "#2e3440"
      foreground: "#d8dee9"
      dim_foreground: "#a5abb6"
    cursor:
      text: "#2e3440"
      cursor: "#d8dee9"
    vi_mode_cursor:
      text: "#2e3440"
      cursor: "#d8dee9"
    selection:
      text: CellForeground
      background: "#4c566a"
    search:
      matches:
        foreground: CellBackground
        background: "#88c0d0"
      footer_bar:
        background: "#434c5e"
        foreground: "#d8dee9"
    normal:
      black: "#3b4252"
      red: "#bf616a"
      green: "#a3be8c"
      yellow: "#ebcb8b"
      blue: "#81a1c1"
      magenta: "#b48ead"
      cyan: "#88c0d0"
      white: "#e5e9f0"
    bright:
      black: "#4c566a"
      red: "#bf616a"
      green: "#a3be8c"
      yellow: "#ebcb8b"
      blue: "#81a1c1"
      magenta: "#b48ead"
      cyan: "#8fbcbb"
      white: "#eceff4"
    dim:
      black: "#373e4d"
      red: "#94545d"
      green: "#809575"
      yellow: "#b29e75"
      blue: "#68809a"
      magenta: "#8c738c"
      cyan: "#6d96a5"
      white: "#aeb3bb"











  # Dracula
  dracula: &dracula
    primary:
      background: '#282a36'
      foreground: '#f8f8f2'
      bright_foreground: '#ffffff'
    cursor:
      text: CellBackground
      cursor: CellForeground
    vi_mode_cursor:
      text: CellBackground
      cursor: CellForeground
    search:
      matches:
        foreground: '#44475a'
        background: '#50fa7b'
      focused_match:
        foreground: '#44475a'
        background: '#ffb86c'
    footer_bar:
      background: '#282a36'
      foreground: '#f8f8f2'
    hints:
      start:
        foreground: '#282a36'
        background: '#f1fa8c'
      end:
        foreground: '#f1fa8c'
        background: '#282a36'
    line_indicator:
      foreground: None
      background: None
    selection:
      text: CellForeground
      background: '#44475a'
    normal:
      black: '#21222c'
      red: '#ff5555'
      green: '#50fa7b'
      yellow: '#f1fa8c'
      blue: '#bd93f9'
      magenta: '#ff79c6'
      cyan: '#8be9fd'
      white: '#f8f8f2'
    bright:
      black: '#6272a4'
      red: '#ff6e6e'
      green: '#69ff94'
      yellow: '#ffffa5'
      blue: '#d6acff'
      magenta: '#ff92df'
      cyan: '#a4ffff'
      white: '#ffffff'


colors: *nord





# Visual Bell
#
# Any time the BEL code is received, Alacritty "rings" the visual bell. Once
# rung, the terminal background will be set to white and transition back to the
# default background color. You can control the rate of this transition by
# setting the `duration` property (represented in milliseconds). You can also
# configure the transition function by setting the `animation` property.
#
# Possible values for `animation`
# `Ease`
# `EaseOut`
# `EaseOutSine`
# `EaseOutQuad`
# `EaseOutCubic`
# `EaseOutQuart`
# `EaseOutQuint`
# `EaseOutExpo`
# `EaseOutCirc`
# `Linear`
#
# To completely disable the visual bell, set its duration to 0.
#
bell:
  animation: EaseOutExpo
  duration: 0

# Mouse bindings
#
# Currently doesn't support modifiers. Both the `mouse` and `action` fields must
# be specified.
#
# Values for `mouse`:
# - Middle
# - Left
# - Right
# - Numeric identifier such as `5`
#
# Values for `action`:
# - Paste
# - PasteSelection
# - Copy (TODO)
mouse_bindings:
  - { mouse: Middle, action: PasteSelection }

mouse:
  # Click settings
  #
  # The `double_click` and `triple_click` settings control the time
  # alacritty should wait for accepting multiple clicks as one double
  # or triple click.
  double_click: { threshold: 300 }
  triple_click: { threshold: 300 }

  # If this is `true`, the cursor is temporarily hidden when typing.
  hide_when_typing: true

hints:
  enabled:
    - regex:
        "(ipfs:|ipns:|magnet:|mailto:|gemini:|gopher:|https:|http:|news:|file:|git:|ssh:|ftp:)\
        [^\u0000-\u001F\u007F-\u009F<>\"\\s{-}\\^⟨⟩`]+"
      hyperlinks: true
      command: xdg-open
      post_processing: true
      mouse:
        enabled: true
        mods: None
      binding:
        key: U
        mods: Control|Shift

selection:
  semantic_escape_chars: ',│`|:"'' ()[]{}<>'

  # When set to `true`, selected text will be copied to both the primary and
  # the selection clipboard. Otherwise, it will only be copied to the selection
  # clipboard.
  save_to_clipboard: true

cursor:
  # Cursor style
  #
  # Values for 'style':
  #   - ▇ Block
  #   - _ Underline
  #   - | Beam
  style: Block
  unfocused_hollow: false

# Live config reload (changes require restart)
# live_config_reload: true
# shell:
  # program: /opt/homebrew/bin/fish


shell:
  program: /opt/homebrew/bin/tmux
  args:
    - new
    - -As0


# shell:
#   program: /opt/homebrew/bin/tmux
#   args: 
#     - attach
#

# Shell
#
# You can set shell.program to the path of your favorite shell, e.g. /bin/zsh.
# Entries in shell.args are passed unmodified as arguments to the shell.
#
# shell:
#   program: /usr/local/bin/fish
#   args:
#     - --login
#
# shell:
#   program: /opt/homebrew/bin/tmux
#   args:
#     - new-session
#     - -A
#     - -D
#     - -s
#     - main
#
# shell:
#   program: /bin/zsh
#   args:
#     - --login
#     - -c
#     - source "/Users/animeshtalukdar/.oh-my-zsh/custom/themes/powerlevel10k/powerlevel10k.zsh-theme"; tmux;




# Key bindings
#
# Each binding is defined as an object with some properties. Most of the
# properties are optional. All of the alphabetical keys should have a letter for
# the `key` value such as `V`. Function keys are probably what you would expect
# as well (F1, F2, ..). The number keys above the main keyboard are encoded as
# `Key1`, `Key2`, etc. Keys on the number pad are encoded `Number1`, `Number2`,
# etc.  These all match the glutin::VirtualKeyCode variants.
#
# A list with all available `key` names can be found here:
# https://docs.rs/glutin/*/glutin/enum.VirtualKeyCode.html#variants
#
# Possible values for `mods`
# `Command`, `Super` refer to the super/command/windows key
# `Control` for the control key
# `Shift` for the Shift key
# `Alt` and `Option` refer to alt/option
#
# mods may be combined with a `|`. For example, requiring control and shift
# looks like:
#
# mods: Control|Shift
#
# The parser is currently quite sensitive to whitespace and capitalization -
# capitalization must match exactly, and piped items must not have whitespace
# around them.
#
# Either an `action`, `chars`, or `command` field must be present.
#   `action` must be one of `Paste`, `PasteSelection`, `Copy`, or `Quit`.
#   `chars` writes the specified string every time that binding is activated.
#     These should generally be escape sequences, but they can be configured to
#     send arbitrary strings of bytes.
#   `command` must be a map containing a `program` string, and `args` array of
#     strings. For example:
#     - { ... , command: { program: "alacritty", args: ["-e", "vttest"] } }
key_bindings:
  - { key: V, mods: Command, action: Paste }
  - { key: C, mods: Command, action: Copy }
  - { key: Q, mods: Command, action: Quit }
  - {
      key: N,
      mods: Command,
      command: { program: "open", args: ["-nb", "io.alacritty"] },
    }
  - { key: Home, chars: "\x1bOH", mode: AppCursor }
  - { key: Home, chars: "\x1b[H", mode: ~AppCursor }
  - { key: End, chars: "\x1bOF", mode: AppCursor }
  - { key: End, chars: "\x1b[F", mode: ~AppCursor }
  - { key: Key0, mods: Command, action: ResetFontSize }
  - { key: Equals, mods: Command, action: IncreaseFontSize }
  - { key: Minus, mods: Command, action: DecreaseFontSize }
  - { key: PageUp, mods: Shift, chars: "\x1b[5;2~" }
  - { key: PageUp, mods: Control, chars: "\x1b[5;5~" }
  - { key: PageUp, chars: "\x1b[5~" }
  - { key: PageDown, mods: Shift, chars: "\x1b[6;2~" }
  - { key: PageDown, mods: Control, chars: "\x1b[6;5~" }
  - { key: PageDown, chars: "\x1b[6~" }
  - { key: Tab, mods: Shift, chars: "\x1b[Z" }
  - { key: Back, chars: "\x7f" }
  - { key: Back, mods: Alt, chars: "\x1b\x7f" }
  - { key: Insert, chars: "\x1b[2~" }
  - { key: Delete, chars: "\x1b[3~" }
  - { key: Left, mods: Shift, chars: "\x1b[1;2D" }
  - { key: Left, mods: Control, chars: "\x1b[1;5D" }
  - { key: Left, mods: Alt, chars: "\x1b[1;3D" }
  - { key: Left, chars: "\x1b[D", mode: ~AppCursor }
  - { key: Left, chars: "\x1bOD", mode: AppCursor }
  - { key: Right, mods: Shift, chars: "\x1b[1;2C" }
  - { key: Right, mods: Control, chars: "\x1b[1;5C" }
  - { key: Right, mods: Alt, chars: "\x1b[1;3C" }
  - { key: Right, chars: "\x1b[C", mode: ~AppCursor }
  - { key: Right, chars: "\x1bOC", mode: AppCursor }
  - { key: Up, mods: Shift, chars: "\x1b[1;2A" }
  - { key: Up, mods: Control, chars: "\x1b[1;5A" }
  - { key: Up, mods: Alt, chars: "\x1b[1;3A" }
  - { key: Up, chars: "\x1b[A", mode: ~AppCursor }
  - { key: Up, chars: "\x1bOA", mode: AppCursor }
  - { key: Down, mods: Shift, chars: "\x1b[1;2B" }
  - { key: Down, mods: Control, chars: "\x1b[1;5B" }
  - { key: Down, mods: Alt, chars: "\x1b[1;3B" }
  - { key: Down, chars: "\x1b[B", mode: ~AppCursor }
  - { key: Down, chars: "\x1bOB", mode: AppCursor }
  - { key: F1, chars: "\x1bOP" }
  - { key: F2, chars: "\x1bOQ" }
  - { key: F3, chars: "\x1bOR" }
  - { key: F4, chars: "\x1bOS" }
  - { key: F5, chars: "\x1b[15~" }
  - { key: F6, chars: "\x1b[17~" }
  - { key: F7, chars: "\x1b[18~" }
  - { key: F8, chars: "\x1b[19~" }
  - { key: F9, chars: "\x1b[20~" }
  - { key: F10, chars: "\x1b[21~" }
  - { key: F11, chars: "\x1b[23~" }
  - { key: F12, chars: "\x1b[24~" }
  - { key: F1, mods: Shift, chars: "\x1b[1;2P" }
  - { key: F2, mods: Shift, chars: "\x1b[1;2Q" }
  - { key: F3, mods: Shift, chars: "\x1b[1;2R" }
  - { key: F4, mods: Shift, chars: "\x1b[1;2S" }
  - { key: F5, mods: Shift, chars: "\x1b[15;2~" }
  - { key: F6, mods: Shift, chars: "\x1b[17;2~" }
  - { key: F7, mods: Shift, chars: "\x1b[18;2~" }
  - { key: F8, mods: Shift, chars: "\x1b[19;2~" }
  - { key: F9, mods: Shift, chars: "\x1b[20;2~" }
  - { key: F10, mods: Shift, chars: "\x1b[21;2~" }
  - { key: F11, mods: Shift, chars: "\x1b[23;2~" }
  - { key: F12, mods: Shift, chars: "\x1b[24;2~" }
  - { key: F1, mods: Control, chars: "\x1b[1;5P" }
  - { key: F2, mods: Control, chars: "\x1b[1;5Q" }
  - { key: F3, mods: Control, chars: "\x1b[1;5R" }
  - { key: F4, mods: Control, chars: "\x1b[1;5S" }
  - { key: F5, mods: Control, chars: "\x1b[15;5~" }
  - { key: F6, mods: Control, chars: "\x1b[17;5~" }
  - { key: F7, mods: Control, chars: "\x1b[18;5~" }
  - { key: F8, mods: Control, chars: "\x1b[19;5~" }
  - { key: F9, mods: Control, chars: "\x1b[20;5~" }
  - { key: F10, mods: Control, chars: "\x1b[21;5~" }
  - { key: F11, mods: Control, chars: "\x1b[23;5~" }
  - { key: F12, mods: Control, chars: "\x1b[24;5~" }
  - { key: F1, mods: Alt, chars: "\x1b[1;6P" }
  - { key: F2, mods: Alt, chars: "\x1b[1;6Q" }
  - { key: F3, mods: Alt, chars: "\x1b[1;6R" }
  - { key: F4, mods: Alt, chars: "\x1b[1;6S" }
  - { key: F5, mods: Alt, chars: "\x1b[15;6~" }
  - { key: F6, mods: Alt, chars: "\x1b[17;6~" }
  - { key: F7, mods: Alt, chars: "\x1b[18;6~" }
  - { key: F8, mods: Alt, chars: "\x1b[19;6~" }
  - { key: F9, mods: Alt, chars: "\x1b[20;6~" }
  - { key: F10, mods: Alt, chars: "\x1b[21;6~" }
  - { key: F11, mods: Alt, chars: "\x1b[23;6~" }
  - { key: F12, mods: Alt, chars: "\x1b[24;6~" }
  - { key: F1, mods: Command, chars: "\x1b[1;3P" }
  - { key: F2, mods: Command, chars: "\x1b[1;3Q" }
  - { key: F3, mods: Command, chars: "\x1b[1;3R" }
  - { key: F4, mods: Command, chars: "\x1b[1;3S" }
  - { key: F5, mods: Command, chars: "\x1b[15;3~" }
  - { key: F6, mods: Command, chars: "\x1b[17;3~" }
  - { key: F7, mods: Command, chars: "\x1b[18;3~" }
  - { key: F8, mods: Command, chars: "\x1b[19;3~" }
  - { key: F9, mods: Command, chars: "\x1b[20;3~" }
  - { key: F10, mods: Command, chars: "\x1b[21;3~" }
  - { key: F11, mods: Command, chars: "\x1b[23;3~" }
  - { key: F12, mods: Command, chars: "\x1b[24;3~" }
  - { key: D, mods: Command, chars: "\x06\x76" }
  - { key: D, mods: Command|Shift, chars: "\x06\x73" }
  # - { key: W, mods: Command, chars: "\x06\x78" }
  - { key: H, mods: Command, chars: "\x06\x68" }
  - { key: J, mods: Command, chars: "\x06\x6a" }
  - { key: K, mods: Command, chars: "\x06\x6b" }
  - { key: L, mods: Command, chars: "\x06\x6c" }
  - { key: T, mods: Command, chars: "\x06\x63" }
  - { key: RBracket, mods: Command|Shift, chars: "\x06\x6e" }
  - { key: LBracket, mods: Command|Shift, chars: "\x06\x70" }
  - { key: Return, mods: Command|Shift, chars: "\x06\x7a" }
  - { key: Key1, mods: Command, chars: "\x06\x31" }
  - { key: Key2, mods: Command, chars: "\x06\x32" }
  - { key: Key3, mods: Command, chars: "\x06\x33" }
  - { key: Key4, mods: Command, chars: "\x06\x34" }
  - { key: Key5, mods: Command, chars: "\x06\x35" }
  - { key: Key6, mods: Command, chars: "\x06\x36" }
  - { key: Key7, mods: Command, chars: "\x06\x37" }
  - { key: Key8, mods: Command, chars: "\x06\x38" }
  - { key: Key9, mods: Command, chars: "\x06\x39" }
  - { key: Left, mods: Command, chars: "\x06\x48" }
  - { key: Down, mods: Command, chars: "\x06\x4a" }
  - { key: Up, mods: Command, chars: "\x06\x4b" }
  - { key: Right, mods: Command, chars: "\x06\x4c" }
  - { key: H, mods: Control|Shift, chars: "\x1b[72;6u" }
  - { key: J, mods: Control|Shift, chars: "\x1b[74;6u" }
  - { key: K, mods: Control|Shift, chars: "\x1b[75;6u" }
  - { key: L, mods: Control|Shift, chars: "\x1b[76;6u" }
  - { key: I, mods: Control, chars: "\x1b[105;5u" }
  - { key: Period, mods: Control, chars: "\x1b[46;5u" }
  - { key: Comma, mods: Control, chars: "\x1b[44;5u" }
  - { key: Semicolon, mods: Control, chars: "\x1b[59;5u" }
  - { key: Return, mods: Shift, chars: "\x1b[13;2u" }
  - { key: Space, mods: Control, chars: "\x00" }
